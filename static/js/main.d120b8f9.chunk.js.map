{"version":3,"sources":["components/JsonInput.jsx","components/Birthdaycard.jsx","components/CardHolder.jsx","components/BirthdayParent.jsx","App.js","index.js"],"names":["JsonInput","props","useState","jsonData","year","dataHolder","updateData","handleChange","key","e","value","target","dummyData","className","onChange","event","type","onClick","data","JSON","parse","dataMissing","map","person","name","birthday","alert","err","Date","setFullYear","stringify","defaultJson","Birthdaycard","dayData","day","birthdays","totalCards","length","cardClass","getCard","backgroundColor","color","index","Math","floor","random","getRandomColor","widths","maxWidth","minWidth","style","background","CardHolder","birthdayCards","BirthdayParent","birthdayDatesHolder","updateBirthdays","birthdayDatesTemp","birthdate","inital","sentName","split","nameItem","toUpperCase","getInital","getDay","push","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d120b8f9.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport '../css/birthdayComponent.css';\r\nimport defaultJson from './birthdayJSON.json';\r\n\r\nconst JsonInput = (props) => {\r\n    const [dataHolder,updateData] = useState({\r\n        jsonData: '',\r\n        year: '',\r\n    });\r\n\r\n    const handleChange = (key,e) => {\r\n        let value = e.target.value;\r\n        let dummyData = {...dataHolder};\r\n        dummyData[key] = value;\r\n        updateData(dummyData);\r\n    }\r\n\r\n    //ON CLICKING ON UPDATE BUTTON\r\n    const fetchBirthdays = () => {\r\n        let data = {};\r\n        if(dataHolder.jsonData){\r\n            try{\r\n                data.jsonData = JSON.parse(dataHolder.jsonData);\r\n                let dataMissing = false;\r\n                data.jsonData.map(person => {\r\n                    if(!person.name || !person.birthday)\r\n                        dataMissing = true;\r\n                });\r\n                if(dataMissing){\r\n                    alert('The person data should contain birthday and name field. Please click on default json to see the example');\r\n                    return;\r\n                }\r\n            }\r\n            catch(err){\r\n                alert('Enter a valid JSON. Please click Default JSON button to see example');\r\n                return;\r\n            }\r\n        }else{\r\n            alert('Enter JSON data');\r\n            return;\r\n        }\r\n        if(dataHolder.year){\r\n            var today = new Date();\r\n            if(today.setFullYear(dataHolder.year)){\r\n                data.year = dataHolder.year;\r\n            }else{\r\n                alert('Enter valid Year');\r\n                return;\r\n            }\r\n        }else{\r\n            alert('Enter a year');\r\n            return;\r\n        }\r\n        props.updateData && props.updateData(data);\r\n    }\r\n\r\n    //GETTING THE DEFAULT EXAMPLE\r\n    const setDefaultJson = () => {\r\n        let dummyData = {...dataHolder};\r\n        dummyData['jsonData'] = JSON.stringify(defaultJson);\r\n        updateData(dummyData);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"input-area\">\r\n            <div className=\"text-area-div\">\r\n                <textarea className='text-area-style' value={dataHolder.jsonData} onChange={(event) => {handleChange('jsonData',event)}} />\r\n            </div>\r\n            <div className=\"year-container-div\">\r\n                <div className=\"year-label\">Year</div>\r\n                <input className='year-input' type='number' value={dataHolder.year} onChange={(event) => {handleChange('year',event)}} />\r\n                <div className=\"update-btn\" onClick = {fetchBirthdays}>UPDATE</div>\r\n                <div className=\"update-btn\" onClick = {setDefaultJson}>Default JSON</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JsonInput\r\n","import React from 'react';\r\nimport '../css/singleCard.css';\r\n\r\nconst Birthdaycard = (props) => {\r\n    let {day,birthdays} = props.dayData;\r\n    let totalCards = birthdays.length;\r\n    let cardClass = 'card';\r\n    if(birthdays.length == 0){\r\n        cardClass += ' no-birthday';\r\n    }\r\n\r\n    //For random color on the blocks of initals generating HEX code\r\n    const getRandomColor = () => {\r\n        let letters = '0123456789ABCDEF';//The color ranges from 0 - F\r\n        let color = '#';\r\n        for (let index = 0; index < 6; index++) {\r\n          color += letters[Math.floor(Math.random() * 16)];//Random generates a random number between 0 - 1 so it multiplied by 16\r\n        }\r\n        return color;\r\n    }\r\n\r\n    const getCard = (birthday) =>{\r\n        let backgroundColor = getRandomColor();\r\n        let widths = {\r\n            maxWidth: '100%',\r\n            minWidth: '100%'\r\n        }\r\n        if(totalCards == 1){// FOR 1 name;\r\n            widths.maxWidth = widths.minWidth = '100%';\r\n        }else if(totalCards < 5 && totalCards > 1){// FOR 2 - 4 names;\r\n            widths.maxWidth = '45%';\r\n            widths.minWidth = '44%';\r\n        }else if(totalCards > 4 && totalCards < 9){// FOR 5 - 8 names;\r\n            widths.maxWidth = '29%';\r\n            widths.minWidth = '28%';\r\n        }else{ //REST number names\r\n            widths.maxWidth = '20%';\r\n            widths.minWidth = '19%';\r\n        }\r\n        return <div className='card-initals' style={{background:backgroundColor,maxWidth:widths.maxWidth,minWidth:widths.minWidth}}>{birthday}</div>\r\n    }\r\n\r\n    return (\r\n        <div className={cardClass}>\r\n            <div className='card-head'>{day}</div>\r\n            <div className='card-body'>\r\n                {birthdays.length > 0 ? birthdays.map(birthday => {\r\n                    return getCard(birthday);\r\n                }):<div className=\"no-birthday-holder\">\r\n                        {/* EMOJI PURPOSE */}\r\n                        <div className='first-div'><span>.</span><span>.</span></div>\r\n                        <div className=\"second-div\">~</div>\r\n                    </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Birthdaycard;\r\n","import React from 'react';\r\nimport Birthdaycard from './Birthdaycard';\r\n\r\n//Component is used to hold all the day Cards from MON-SUN which is being iterated by map\r\nconst CardHolder = (props) => {    \r\n    return (\r\n        <div className='card-holders'>\r\n            {props.data.map(birthdayCards => {\r\n                return <Birthdaycard dayData = {birthdayCards} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardHolder\r\n","import React,{useEffect,useState} from 'react';\r\nimport JsonInput from './JsonInput';\r\nimport CardHolder from './CardHolder';\r\nimport '../css/birthdayComponent.css';\r\n\r\nconst BirthdayParent = (props) => {\r\n    let [birthdayDatesHolder,updateBirthdays] = useState([\r\n        {day: 'MON', birthdays: []},\r\n        {day: 'TUE', birthdays: []},\r\n        {day: 'WED', birthdays: []},\r\n        {day: 'THU', birthdays: []},\r\n        {day: 'FRI', birthdays: []},\r\n        {day: 'SAT', birthdays: []},\r\n        {day: 'SUN', birthdays: []},\r\n    ]);\r\n    \r\n    //USE TO GET THE INITALS OF A NAME\r\n    const getInital = (sentName) => {\r\n        let name = sentName.split(\" \");\r\n        let inital = '';\r\n        name.map(nameItem => {\r\n            inital += nameItem[0];\r\n        } )\r\n        inital = inital.toUpperCase();\r\n        return inital;\r\n    }\r\n\r\n    //IT IS USE TO RESET THE DATA SO THAT EVERYTIME YOU RELOAD or update it gets reloaded\r\n    const resetData = () => {\r\n        let data = [\r\n            {day: 'MON', birthdays: []},\r\n            {day: 'TUE', birthdays: []},\r\n            {day: 'WED', birthdays: []},\r\n            {day: 'THU', birthdays: []},\r\n            {day: 'FRI', birthdays: []},\r\n            {day: 'SAT', birthdays: []},\r\n            {day: 'SUN', birthdays: []},\r\n        ]; \r\n        return data;       \r\n    }\r\n\r\n    const updateData  = (data) => {\r\n        let birthdayDatesTemp = [...birthdayDatesHolder];\r\n        birthdayDatesTemp = resetData();\r\n        let {jsonData,year} = data;\r\n        jsonData.map( person => {\r\n            let birthdate = new Date(person.birthday);\r\n            birthdate.setFullYear(year);\r\n            let inital = getInital(person.name);\r\n            let day = birthdate.getDay();\r\n            day = day == 0 ? 6 : day-1;\r\n            birthdayDatesTemp[day].birthdays.push(inital);\r\n        })\r\n        updateBirthdays(birthdayDatesTemp);\r\n    }\r\n\r\n    return (\r\n        <div className='parent-div'>\r\n            <div className='title-div'>Birthday Cal</div>\r\n            <CardHolder data = {birthdayDatesHolder} />\r\n           <JsonInput updateData = {(data) => {updateData(data)}} />     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BirthdayParent;\r\n","import React from 'react';\nimport './App.css';\nimport BirthdayParent from './components/BirthdayParent'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BirthdayParent />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}